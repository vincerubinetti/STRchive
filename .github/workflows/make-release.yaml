name: Make release

on:
  push:
    branches:
      - main
    paths:
      - CITATION.cff

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Debug dump
        uses: crazy-max/ghaction-dump-context@v2

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: SSH debug
        if: runner.debug == '1'
        uses: mxschmitt/action-tmate@v3

      - name: Get previous version file
        run: git show HEAD~1:CITATION.cff >> CITATION-previous.cff

      - name: Install packages
        run: npm install yaml@v2 semver@v7 glob@v11

      - name: Get version
        id: version
        uses: actions/github-script@v7
        with:
          script: |
            const { readFileSync, renameSync } = require("fs");
            const { lte, valid } = require("semver");
            const { parse } = require("yaml");
            const { globSync } = require("glob");

            // load and parse file contents
            const { version: newVersion } = parse(readFileSync("CITATION.cff").toString());
            const { version: oldVersion } = parse(readFileSync("CITATION-previous.cff").toString());

            console.log("Old version:", oldVersion);
            console.log("New version:", newVersion);

            // check version
            if (!valid(newVersion)) throw Error("Version not valid");
            if (lte(newVersion, oldVersion)) return;

            // add version to artifact filenames
            for (const file of globSync("data/STRchive-*.json"))
              renameSync(file, file.replace(".json", `_v${newVersion}.json`));
            for (const file of globSync("data/STRchive-disease-loci*.bed"))
              renameSync(file, file.replace("-loci", `-loci_v${newVersion}_`));

            return newVersion;

      - name: Create GitHub release
        uses: ncipollo/release-action@v1
        if: ${{ steps.version.outputs.result }}
        with:
          commit: ${{ github.ref }}
          tag: v${{ steps.version.outputs.result }}
          name: v${{ steps.version.outputs.result }}
          draft: true
          artifacts: STRchive-loci.json,STRchive-citations.json,STRchive-disease-loci*.bed
          artifactErrorsFailBuild: true
